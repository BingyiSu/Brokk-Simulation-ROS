<?xml version="1.0" ?>

<robot name="$(arg roboname)" xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:property name="PI" value="3.1415926835897931"/>

<!--Car Body-->
  <link name="robot_chassis">

    <collision name="chassis_collision">
      <origin xyz="0  0  0.1" rpy="0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </collision>
    <collision name="caster_collision">
      <origin xyz="-0.15  0    0.05" rpy="0 0 0"/>
      <geometry>
        <sphere radius=".05"/>
      </geometry>
    </collision>
    <visual name="chassis_visual">
      <origin xyz="0   0   0.15" rpy="0 0 0"/>
      <geometry>
        <box size=".4 .2 .1"/>
      </geometry>
    </visual>
    <visual name="caster_visual">
      <origin xyz="-0.15  0    0.05" rpy="0 0 0"/>
      <geometry>
        <sphere radius=".05"/>
      </geometry>
    </visual>
  </link>
  
  <joint name="inertial_joint" type="fixed">
    <parent link="robot_chassis"/>
    <child link="main_mass"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
  </joint>  
  
  <link name="main_mass" type="fixed">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <mass value="5"/>
      <inertia ixx="0.40000"  ixy="0.000000"  ixz="0.000000"  iyy="1"  iyz="0.000000" izz="1"/>
    </inertial>
  </link>

<!--left wheel-->
  <link name="left_wheel">
    <inertial>
      <mass value="20"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.5" ixy="0" ixz="0" iyy="0.5" iyz="0" izz="1"/>
    </inertial>
    <collision name="left_wheel_collision">
      <origin xyz="0   0   0.03" rpy="0 0 0"/>
      <geometry>
        <cylinder radius=".1" length=".05"/>
      </geometry>
    </collision>
    <visual name="left_wheel_visual">
      <origin xyz="0   0   0.03" rpy="0 0 0"/>
      <geometry>
        <cylinder radius=".1" length=".05"/>
      </geometry>
    </visual>
  </link>
  <joint name="left_wheel_joint" type="continuous">
    <parent link="robot_chassis"/>
    <child link="left_wheel"/>
    <origin xyz="0.1 0.1 0.1" rpy="0   ${PI/2} ${PI/2}"/>
    <axis xyz="0 0 1.e+00"/>
    <limit lower="-10000" upper="10000" effort="10000" velocity="10000"/>
  </joint>
  
<!--right wheel--> 
  <link name="right_wheel">
    <inertial>
      <mass value="20"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.5" ixy="0" ixz="0" iyy="0.5" iyz="0" izz="1"/>
    </inertial>
    <collision name="right_wheel_collision">
      <origin xyz="0    0   -0.03" rpy="0 0 0"/>
      <geometry>
        <cylinder radius=".1" length=".05"/>
      </geometry>
    </collision>
    <visual name="right_wheel_visual">
      <origin xyz="0    0   -0.03" rpy="0 0 0"/>
      <geometry>
        <cylinder radius=".1" length=".05"/>
      </geometry>
    </visual>
  </link>
  
  <joint name="right_wheel_joint" type="continuous">
    <parent link="robot_chassis"/>
    <child link="right_wheel"/>
    <origin xyz="0.1 -0.1  0.1" rpy="0  ${PI/2} ${PI/2}"/>
    <axis xyz="0 0 1.e+00"/>
    <limit lower="-10000" upper="10000" effort="10000" velocity="10000"/>
  </joint>
  
<!--laser sensor-->  
  <link name="sensor_laser">
    <inertial>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <mass value="1" />
      <!-- RANDOM INERTIA BELOW -->
      <inertia ixx="0.02" ixy="0" ixz="0" iyy="0.02" iyz="0" izz="0.02"/>
    </inertial>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <cylinder radius="0.05" length="0.1"/>
      </geometry>
    </visual>

    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <cylinder radius="0.05" length="0.06"/>
      </geometry>
    </collision>
  </link>

  <joint name="joint_sensor_laser" type="fixed">
    <origin xyz="0.15 0 0.20" rpy="0 0 0"/>
    <parent link="robot_chassis"/>
    <child link="sensor_laser"/>
  </joint>
  
<!-- motors and transmissions for the two wheels -->
  <transmission name="trans_right">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="right_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_right">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>  

  <transmission name="trans_left">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="left_wheel_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor_left">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>  

<!--plugin-->

 <gazebo reference="sensor_laser">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>20</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/brokk/laser/scan</topicName>
        <frameName>sensor_laser</frameName>
      </plugin>
    </sensor>
 </gazebo>

 <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>0.1</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>robot_chassis</robotBaseFrame>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/$(arg roboname)</robotNamespace>
      <robotParam>robot_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  
  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <jointName>left_wheel_joint, right_wheel_joint </jointName>
      <updateRate>50.0</updateRate>
      <robotNamespace>/$(arg roboname)</robotNamespace>
      <alwaysOn>true</alwaysOn>
    </plugin>
  </gazebo>



</robot>
